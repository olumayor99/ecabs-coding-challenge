name: "Build & Deploy to EKS"

on:
  push:
    branches: ["master"]
    paths-ignore:
      [
        "booking-consumer-service/**",
        "booking-producer-service/**",
        "booking-contract/**",
        ".github/workflows/build-and-push.yml",
      ]
  pull_request:
    branches: ["master"]
    paths-ignore:
      [
        "booking-consumer-service/**",
        "booking-producer-service/**",
        "booking-contract/**",
        ".github/workflows/build-and-push.yml",
      ]

jobs:
  deploy:
    name: Deploy to EKS Cluster
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install kubectl
        run: |
          if kubectl version --short &> /dev/null; then
            echo "Kubectl is already installed."
          else
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
            echo "$(<kubectl.sha256) kubectl" | sha256sum --check
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            kubectl version --client
          fi

      - name: Install Helm
        run: |
          if helm version &> /dev/null; then
            echo "Helm is already installed."
          else
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh
          fi

      - name: Check AWS version
        run: |
          aws --version
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.EKS_REGION }}
          aws sts get-caller-identity

      - name: Connect to EKS cluster
        run: aws eks --region ${{ secrets.EKS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER }}

      - name: Install RabbitMQ Operator
        run: |
          if kubectl get deployment -n rabbitmq-system rabbitmq-cluster-operator &> /dev/null; then
            echo "RabbitMQ operator is already installed."
          else
            helm repo remove bitnami https://charts.bitnami.com/bitnami
            helm repo add bitnami https://charts.bitnami.com/bitnami
            helm repo update
            helm install rabbitmq-cluster-operator bitnami/rabbitmq-cluster-operator -n rabbitmq-system --create-namespace
          fi

      - name: Deploy RabbitMQ Cluster
        run: |
          helm install my-rabbitmq bitnami/rabbitmq

      - name: Verify the deployment
        run: kubectl get pods -A
